#!/usr/bin/python3
"""The console"""
import cmd

class HBNBCommand(cmd.Cmd):
    """the class for the airbnb console"""

    prompt =  '(hbnb)' 
    def do_EOF(self, line):
        """exits the console """
        return True

    def do_quit(self, line):
        """Quit command to exit the program"""
        return True

    def emptyline(self):
       """when line is empty"""
       return
   
   def do_create(self, line):
        """function to create an instance of the BaseModel"""
        line_arr = line.split(' ')
        if not line:
            print("** class name missing **")
        else:
            if line_arr[0] not in cmd.Cmd.class_list:
                print(f"** class doesn't exist **")
            else:
                obj = eval(line_arr[0])()
                print(obj.id)
                obj.save()

def do_show(self, line):
        """Shows all the param of a class Usage: show <class_name> <id>"""
        line_arr = line.split(" ")
        if not line:
            print("** class name missing **")
        else:
            if line_arr[0] not in cmd.Cmd.class_list:
                print(" ** class doesn't exist ** ")
            else:
                if len(line_arr) < 2:
                    print("** instance id missing **")
                else:
                    load_id = line_arr[1]
                    all_obj = storage.all()
                    try:
                        obj = all_obj[f"{line_arr[0]}.{load_id}"]
                        print(obj)
                    except KeyError:
                        print("no instance found")

if __name__ == '__main__':
    HBNBCommand().cmdloop()
